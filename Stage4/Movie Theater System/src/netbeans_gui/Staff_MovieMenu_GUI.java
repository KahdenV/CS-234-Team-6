package netbeans_gui;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Lithi
 */
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import model.Movie;
import io.MovieIO;
import io.ShowtimeIO;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;


public class Staff_MovieMenu_GUI extends javax.swing.JFrame {
    private javax.swing.JComboBox<String> EditMovieDropdown;
    private javax.swing.JButton EditLoadButton;
    private javax.swing.JTextField EditTitleField;
    private javax.swing.JButton EditSaveButton;

    private javax.swing.JComboBox<String> DeleteMovieDropdown;
    private javax.swing.JButton DeleteButton;
    /**
     * Creates new form Staff_MovieMenu_GUI
     */
    
    private String [] listMovieTitles;
    private List<Movie> movies;

    public Staff_MovieMenu_GUI() {
        this.movies = MovieIO.loadMovies("data/movies.txt");
        initComponents();
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));
        contentPanel.setPreferredSize(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        loadMovies();
        initEditPanel();
        initDeletePanel();
    }
    
    private void loadMovies()
    {
        contentPanel.removeAll();
        movies = MovieIO.loadMovies("data/movies.txt");
        Map<String, List<String>> showtimesMap = ShowtimeIO.getShowtimesByMovie("data/showtimes.txt");

        for (Movie movie : movies) {
            JPanel moviePanel = new JPanel();
            moviePanel.setLayout(new BorderLayout());
            moviePanel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            moviePanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, 280));
            moviePanel.setPreferredSize(new Dimension(700, 280));

            JPanel left = new JPanel();
            left.setLayout(new BoxLayout(left, BoxLayout.Y_AXIS));
            left.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));
            left.setPreferredSize(new Dimension(200, 200));
            left.add(new JLabel("ID: " + movie.getMovieID()));
            left.add(new JLabel("Title: " + movie.getMovieTitle()));
            left.add(new JLabel("Genres: " + movie.getMovieGenres()));
            left.add(new JLabel("Run Time: " + movie.getMovieRuntime() + " minutes"));
            left.add(new JLabel(movie.getMovieRating()));
            left.add(new JLabel("Released: " + movie.getMovieReleaseDate()));
            left.add(new JLabel("Price: $" + String.format("%.2f", movie.getMoviePrice())));

            JLabel poster = new JLabel();
            ImageIcon icon = new ImageIcon("data/posters/" + movie.getMovieTitle() + ".jpg");
            Image img = icon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
            poster.setIcon(new ImageIcon(img));
            poster.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0));
            poster.setPreferredSize(new Dimension(100, 200));

            JPanel right = new JPanel();
            right.setLayout(new BoxLayout(right, BoxLayout.Y_AXIS));
            right.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));
            right.setPreferredSize(new Dimension(250, 200));
            right.add(new JLabel("Showtimes:"));
            List<String> times = showtimesMap.get(movie.getMovieID());
            if (times != null) {
                for (String time : times) {
                    right.add(new JLabel(time));
                }
            } else {
                right.add(new JLabel("No showtimes available."));
            }

            moviePanel.add(left, BorderLayout.WEST);
            moviePanel.add(poster, BorderLayout.CENTER);
            moviePanel.add(right, BorderLayout.EAST);

            contentPanel.add(Box.createVerticalStrut(10));
            contentPanel.add(moviePanel);
        }

        contentPanel.revalidate();
        contentPanel.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        AllMovies_Scroll = new javax.swing.JScrollPane();
        contentPanel = new javax.swing.JPanel();
        AddMovie_Panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TitleField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        RatingField = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        GenreField1 = new javax.swing.JComboBox<>();
        GenreField2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        RuntimeField = new javax.swing.JSpinner();
        DayField = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        MonthField = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        YearField = new javax.swing.JSpinner();
        SUBMIT = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.lightGray));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        AllMovies_Scroll.setPreferredSize(new java.awt.Dimension(402, 362));
        AllMovies_Scroll.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AllMovies_ScrollFocusGained(evt);
            }
        });

        contentPanel.setPreferredSize(new java.awt.Dimension(400, 362));

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1124, Short.MAX_VALUE)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 649, Short.MAX_VALUE)
        );

        AllMovies_Scroll.setViewportView(contentPanel);

        jTabbedPane1.addTab("View All Movies", AllMovies_Scroll);

        jLabel1.setText("Movie Title");

        TitleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TitleFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Movie Rating");

        RatingField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G", "PG", "PG-13", "R" }));
        RatingField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RatingFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Movie Genres");

        GenreField1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Action", "Adventure", "Animated", "Comedy", "Crime", "Documentary", "Drama", "Family", "Fantasy", "Historical", "Horror", "Musical", "Mystery", "Political", "Romance", "Sci-Fi", "Superhero", "Sports", "Thriller", "War", "Western" }));
        GenreField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenreField1ActionPerformed(evt);
            }
        });

        GenreField2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Action", "Adventure", "Animated", "Comedy", "Crime", "Documentary", "Drama", "Family", "Fantasy", "Historical", "Horror", "Musical", "Mystery", "Political", "Romance", "Sci-Fi", "Superhero", "Sports", "Thriller", "War", "Western" }));

        jLabel4.setText("Movie Runtime (mins)");

        jLabel6.setText("Release Day");

        jLabel7.setText("Release Month");

        MonthField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel8.setText("Release Year");

        SUBMIT.setText("Submit");
        SUBMIT.setToolTipText("");
        SUBMIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUBMITActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add a Movie");

        javax.swing.GroupLayout AddMovie_PanelLayout = new javax.swing.GroupLayout(AddMovie_Panel);
        AddMovie_Panel.setLayout(AddMovie_PanelLayout);
        AddMovie_PanelLayout.setHorizontalGroup(
            AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                        .addGap(519, 519, 519)
                        .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RatingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                                .addComponent(GenreField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(GenreField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TitleField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(RuntimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                                .addComponent(DayField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MonthField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(YearField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                        .addGap(453, 453, 453)
                        .addComponent(SUBMIT, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        AddMovie_PanelLayout.setVerticalGroup(
            AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddMovie_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(RatingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(GenreField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenreField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(RuntimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddMovie_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(SUBMIT, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add a Movie", AddMovie_Panel);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Edit a Movie");

        jLabel10.setText("Select Movie");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(434, 434, 434)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel10)))
                .addContainerGap(472, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel10)
                .addContainerGap(528, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit a Movie", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1126, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Delete a Movie", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SUBMITActionPerformed(java.awt.event.ActionEvent evt) {
        String title = TitleField.getText().trim();
        String genres = GenreField1.getSelectedItem() + ", " + GenreField2.getSelectedItem();
        int runtime = (Integer) RuntimeField.getValue();
        String rating = (String) RatingField.getSelectedItem();
        String releaseDate = MonthField.getSelectedItem() + "/" + DayField.getValue() + "/" + YearField.getValue();
    
        // Ask for price using input dialog (since no PriceField in initComponents)
        String priceInput = JOptionPane.showInputDialog(this, "Enter movie price:", "Price", JOptionPane.PLAIN_MESSAGE);
        double price;
    
        try {
            price = Double.parseDouble(priceInput);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price entered. Please enter a numeric value.");
            return;
        }
    
        if (title.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a movie title.");
            return;
        }
    
        // Generate a new unique movie ID
        int maxID = 0;
        for (Movie m : movies) {
            try {
                int id = Integer.parseInt(m.getMovieID());
                if (id > maxID) maxID = id;
            } catch (NumberFormatException ignore) {}
        }
        String newID = String.format("%03d", maxID + 1);
    
        // Create and add new movie
        Movie newMovie = new Movie();
        newMovie.setMovieID(newID);
        newMovie.setMovieTitleFromFile(title);
        newMovie.setMovieGenresFromFile(genres);
        newMovie.setMovieRuntimeFromFile(runtime);
        newMovie.setMovieRatingFromFile(rating);
        newMovie.setMovieReleaseDateFromFile(releaseDate);
        newMovie.setMoviePrice(price);
    
        movies.add(newMovie);
        MovieIO.saveMovies("data/movies.txt", movies);
        loadMovies(); // refresh movie list
    
        JOptionPane.showMessageDialog(this, "Movie added successfully!");
    }
    
    private void initEditPanel() {
        jPanel1.setLayout(new BoxLayout(jPanel1, BoxLayout.Y_AXIS));

        EditMovieDropdown = new JComboBox<>();
        EditMovieDropdown.setPreferredSize(new Dimension(300, 25));
        EditMovieDropdown.setMaximumSize(new Dimension(300, 25));

        for (Movie m : movies) {
            EditMovieDropdown.addItem(m.getMovieID() + " - " + m.getMovieTitle());
        }

        EditLoadButton = new JButton("Load Movie");

        EditTitleField = new JTextField();
        EditTitleField.setMaximumSize(new Dimension(300, 25));

        GenreField1 = new JComboBox<>(getGenres());
        GenreField2 = new JComboBox<>(getGenres());
        GenreField1.setMaximumSize(new Dimension(200, 25));
        GenreField2.setMaximumSize(new Dimension(200, 25));

        RuntimeField = new JSpinner(new SpinnerNumberModel(90, 1, 500, 1));
        RuntimeField.setMaximumSize(new Dimension(100, 25));

        RatingField = new JComboBox<>(new String[]{"G", "PG", "PG-13", "R"});
        RatingField.setMaximumSize(new Dimension(100, 25));

        DayField = new JSpinner(new SpinnerNumberModel(1, 1, 31, 1));
        DayField.setMaximumSize(new Dimension(60, 25));

        MonthField = new JComboBox<>(new String[]{
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        });
        MonthField.setMaximumSize(new Dimension(100, 25));

        YearField = new JSpinner(new SpinnerNumberModel(2024, 1900, 2100, 1));
        YearField.setMaximumSize(new Dimension(80, 25));

        JSpinner PriceField = new JSpinner(new SpinnerNumberModel(5.00, 0.00, 50.00, 0.01));
        PriceField.setMaximumSize(new Dimension(100, 25));

        EditSaveButton = new JButton("Save Changes");

        // Load selected movie
        EditLoadButton.addActionListener(e -> {
            int index = EditMovieDropdown.getSelectedIndex();
            if (index >= 0) {
                Movie m = movies.get(index);
                EditTitleField.setText(m.getMovieTitle());
                RuntimeField.setValue(m.getMovieRuntime());
                RatingField.setSelectedItem(m.getMovieRating());
                PriceField.setValue(m.getMoviePrice());

                // Set genres
                String[] genres = m.getMovieGenres().split(", ");
                if (genres.length >= 1) GenreField1.setSelectedItem(genres[0]);
                if (genres.length >= 2) GenreField2.setSelectedItem(genres[1]);

                // Set release date
                String[] dateParts = m.getMovieReleaseDate().split("/");
                if (dateParts.length == 3) {
                    MonthField.setSelectedIndex(Integer.parseInt(dateParts[0]) - 1);
                    DayField.setValue(Integer.parseInt(dateParts[1]));
                    YearField.setValue(Integer.parseInt(dateParts[2]));
                }
            }
        });

        // Save updates
        EditSaveButton.addActionListener(e -> {
            int index = EditMovieDropdown.getSelectedIndex();
            if (index >= 0) {
                Movie m = movies.get(index);
                m.setMovieTitleFromFile(EditTitleField.getText().trim());
                m.setMovieGenresFromFile(GenreField1.getSelectedItem() + ", " + GenreField2.getSelectedItem());
                m.setMovieRuntimeFromFile((Integer) RuntimeField.getValue());
                m.setMovieRatingFromFile((String) RatingField.getSelectedItem());
                m.setMoviePrice((Double) PriceField.getValue());
                m.setMovieReleaseDateFromFile((MonthField.getSelectedIndex() + 1) + "/" +
                                            DayField.getValue() + "/" +
                                            YearField.getValue());
                MovieIO.saveMovies("data/movies.txt", movies);
                loadMovies();
                JOptionPane.showMessageDialog(this, "Movie updated successfully.");
            }
        });

        jPanel1.add(Box.createVerticalStrut(10));
        jPanel1.add(EditMovieDropdown);
        jPanel1.add(EditLoadButton);
        jPanel1.add(new JLabel("Title")); jPanel1.add(EditTitleField);
        jPanel1.add(new JLabel("Genres")); jPanel1.add(GenreField1); jPanel1.add(GenreField2);
        jPanel1.add(new JLabel("Runtime")); jPanel1.add(RuntimeField);
        jPanel1.add(new JLabel("Rating")); jPanel1.add(RatingField);
        jPanel1.add(new JLabel("Release Date")); jPanel1.add(MonthField); jPanel1.add(DayField); jPanel1.add(YearField);
        jPanel1.add(new JLabel("Price")); jPanel1.add(PriceField);
        jPanel1.add(Box.createVerticalStrut(10));
        jPanel1.add(EditSaveButton);
    }

    private String[] getGenres() {
        return new String[] {
            "Action", "Adventure", "Animated", "Comedy", "Crime", "Documentary", "Drama",
            "Family", "Fantasy", "Historical", "Horror", "Musical", "Mystery", "Political",
            "Romance", "Sci-Fi", "Superhero", "Sports", "Thriller", "War", "Western"
        };
    }
    
    
    private void initDeletePanel() {
        jPanel2.setLayout(new BoxLayout(jPanel2, BoxLayout.Y_AXIS));
        DeleteMovieDropdown = new javax.swing.JComboBox<>();
        for (Movie m : movies) {
            DeleteMovieDropdown.addItem(m.getMovieID() + " - " + m.getMovieTitle());
        }
    
        DeleteButton = new javax.swing.JButton("Delete Movie");
    
        DeleteButton.addActionListener(e -> {
            int index = DeleteMovieDropdown.getSelectedIndex();
            if (index >= 0) {
                int confirm = JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    movies.remove(index);
                    MovieIO.saveMovies("data/movies.txt", movies);
                    loadMovies();
                    JOptionPane.showMessageDialog(this, "Movie deleted.");
                    // Refresh dropdowns
                    EditMovieDropdown.removeAllItems();
                    DeleteMovieDropdown.removeAllItems();
                    for (Movie m : movies) {
                        EditMovieDropdown.addItem(m.getMovieID() + " - " + m.getMovieTitle());
                        DeleteMovieDropdown.addItem(m.getMovieID() + " - " + m.getMovieTitle());
                    }
                }
            }
        });
    
        DeleteMovieDropdown.setMaximumSize(new Dimension(300, 30));
        DeleteMovieDropdown.setPreferredSize(new Dimension(300, 30));
        jPanel2.add(Box.createRigidArea(new Dimension(0, 20)));
        jPanel2.add(DeleteMovieDropdown);
        jPanel2.add(DeleteButton);
    }

    private void GenreField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenreField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenreField1ActionPerformed

    private void RatingFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RatingFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RatingFieldActionPerformed

    private void TitleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TitleFieldActionPerformed

    }//GEN-LAST:event_TitleFieldActionPerformed

    private void AllMovies_ScrollFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AllMovies_ScrollFocusGained

    }//GEN-LAST:event_AllMovies_ScrollFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddMovie_Panel;
    private javax.swing.JScrollPane AllMovies_Scroll;
    private javax.swing.JSpinner DayField;
    private javax.swing.JComboBox<String> GenreField1;
    private javax.swing.JComboBox<String> GenreField2;
    private javax.swing.JComboBox<String> MonthField;
    private javax.swing.JComboBox<String> RatingField;
    private javax.swing.JSpinner RuntimeField;
    private javax.swing.JButton SUBMIT;
    private javax.swing.JTextField TitleField;
    private javax.swing.JSpinner YearField;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
