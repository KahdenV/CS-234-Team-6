package netbeans_gui;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import java.util.List;
/**
 *
 * @author Lithi
 */
public class Staff_StaffMenu_GUI extends javax.swing.JFrame {

    /**
     * Creates new form Staff_StaffMenu_GUI
     */
    private DefaultListModel<String> staffListModel;
    private JList<String> staffList;

    public Staff_StaffMenu_GUI() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setupListPanel();
        setupAddPanel();
        setupEditPanel();
        setupRemovePanel();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("List of Staff", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Add New Staff", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Edit Staff", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Remove Staff", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setupListPanel() {
        JTextArea staffListArea = new JTextArea();
        staffListArea.setEditable(false);
        staffListArea.setText(loadStaffText());
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(new JScrollPane(staffListArea), BorderLayout.CENTER);
    }
    
    private String loadStaffText() {
        StringBuilder sb = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader("data/staff.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                sb.append(line).append("\n");
            }
        } catch (IOException e) {
            sb.append("Failed to load staff.");
        }
        return sb.toString();
    }

    private void setupAddPanel() {
        jPanel2.setLayout(new GridLayout(5, 2));
        JTextField roleField = new JTextField();
        JTextField emailField = new JTextField();
        JTextField passwordField = new JTextField();
        JButton saveButton = new JButton("Add Staff");
    
        saveButton.addActionListener(e -> {
            String role = roleField.getText();
            String email = emailField.getText();
            String password = passwordField.getText();
            try (BufferedWriter writer = new BufferedWriter(new FileWriter("data/staff.txt", true))) {
                writer.write(role + "," + email + "," + password);
                writer.newLine();
                JOptionPane.showMessageDialog(this, "Staff added.");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        });
    
        jPanel2.add(new JLabel("Role:"));
        jPanel2.add(roleField);
        jPanel2.add(new JLabel("Email:"));
        jPanel2.add(emailField);
        jPanel2.add(new JLabel("Password:"));
        jPanel2.add(passwordField);
        jPanel2.add(new JLabel());
        jPanel2.add(saveButton);
    }
    
        private void setupEditPanel() {
        jPanel3.setLayout(new GridLayout(5, 2));
        JTextField searchEmail = new JTextField();
        JTextField newRole = new JTextField();
        JTextField newPassword = new JTextField();
        JButton editButton = new JButton("Edit Staff");

        editButton.addActionListener(e -> {
            String email = searchEmail.getText();
            List<String> updatedLines = new ArrayList<>();
            try (BufferedReader reader = new BufferedReader(new FileReader("data/staff.txt"))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    String[] parts = line.split(",");
                    if (parts[1].equals(email)) {
                        updatedLines.add(newRole.getText() + "," + email + "," + newPassword.getText());
                    } else {
                        updatedLines.add(line);
                    }
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }

            try (BufferedWriter writer = new BufferedWriter(new FileWriter("data/staff.txt"))) {
                for (String l : updatedLines) {
                    writer.write(l);
                    writer.newLine();
                }
                JOptionPane.showMessageDialog(this, "Staff updated.");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        });

        jPanel3.add(new JLabel("Email to Edit:"));
        jPanel3.add(searchEmail);
        jPanel3.add(new JLabel("New Role:"));
        jPanel3.add(newRole);
        jPanel3.add(new JLabel("New Password:"));
        jPanel3.add(newPassword);
        jPanel3.add(new JLabel());
        jPanel3.add(editButton);
    }

    private void setupRemovePanel() {
        jPanel4.setLayout(new GridLayout(3, 2));
        JTextField emailField = new JTextField();
        JButton deleteButton = new JButton("Remove Staff");
    
        deleteButton.addActionListener(e -> {
            String email = emailField.getText();
            List<String> remaining = new ArrayList<>();
            try (BufferedReader reader = new BufferedReader(new FileReader("data/staff.txt"))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    if (!line.split(",")[1].equals(email)) {
                        remaining.add(line);
                    }
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
    
            try (BufferedWriter writer = new BufferedWriter(new FileWriter("data/staff.txt"))) {
                for (String l : remaining) {
                    writer.write(l);
                    writer.newLine();
                }
                JOptionPane.showMessageDialog(this, "Staff removed.");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        });
    
        jPanel4.add(new JLabel("Email to Remove:"));
        jPanel4.add(emailField);
        jPanel4.add(new JLabel());
        jPanel4.add(deleteButton);
    }
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
