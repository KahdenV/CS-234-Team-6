/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package netbeans_gui;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import io.MovieIO;
import io.ShowtimeIO;
import model.Movie;
import model.Payment;
import model.Screen;
import model.Showtime;
import model.Customer;

/**
 *
 * @author Kahden Vienna
 */
public class PurchaseTicket_GUI extends javax.swing.JFrame {

    private Customer currentUser;
    private List<Movie> movies;
    private List<Showtime> showtimes;
    private Showtime selectedShowtime;

    public double price;

    public PurchaseTicket_GUI(Customer currentUser) {
        this.currentUser = currentUser;
        initComponents();
        loadMovies();
        jComboBox1.addActionListener(e -> updateShowtimes());
        jComboBox2.addActionListener(e -> updateSeats());
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Purchase");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Movie:");

        jLabel2.setText("Showtime:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Purchase Ticket");

        jLabel4.setText("Seats:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Price: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel5)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        String selectedSeat = (String) jComboBox3.getSelectedItem();
        if (selectedSeat == null) {
            JOptionPane.showMessageDialog(this, "Please select a seat.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        jLabel5.setText("Price: $" + String.format("%.2f", price));
        Payment payment = Payment.processPayment(currentUser.getCustomerId(), price);

        selectedShowtime.getAvailableSeats().remove(selectedSeat);
        ShowtimeIO.saveShowtimes("data/showtimes.txt", showtimes);


        try (BufferedWriter writer = new BufferedWriter(new FileWriter("data/purchases.txt", true))) {
            writer.write(currentUser.getCustomerId() + ",Ticket," + price + "," + payment.getPaymentId());
            writer.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }

        JOptionPane.showMessageDialog(this, "Ticket purchased successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        updateSeats();
    }

    private void loadMovies() {
        movies = MovieIO.loadMovies("data/movies.txt");
        showtimes = ShowtimeIO.loadShowtimes("data/showtimes.txt", movies, new ArrayList<Screen>()); // add actual screens if needed
        jComboBox1.removeAllItems();
        for (Movie movie : movies) {
            jComboBox1.addItem(movie.getMovieID() + ": " + movie.getMovieTitle());
        }
        
        updateShowtimes();
        updateSeats();
    }

    private void updateShowtimes() {
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        selectedShowtime = null;

        String selected = (String) jComboBox1.getSelectedItem();
        if (selected != null && selected.contains(":")) {
            String movieID = selected.split(":")[0];
            for (Showtime s : showtimes) {
                if (s.getShownMovie().getMovieID().equals(movieID)) {
                    jComboBox2.addItem(s.getTime() + " (Screen " + s.getShowingScreen().getScreenNumber() + ")");
                }
            }
        }
    }

    private void updateSeats() {
        jComboBox3.removeAllItems();
        jButton1.setEnabled(false);
    
        String selectedMovie = (String) jComboBox1.getSelectedItem();
        String selectedTime = (String) jComboBox2.getSelectedItem();
        if (selectedMovie == null || selectedTime == null) return;
    
        String movieID = selectedMovie.split(":")[0];
        for (Showtime s : showtimes) {
            if (s.getShownMovie().getMovieID().equals(movieID) &&
                selectedTime.contains(s.getTime()) &&
                selectedTime.contains(s.getShowingScreen().getScreenNumber())) {
    
                selectedShowtime = s;
                List<String> seats = s.getAvailableSeats();
    
                if (seats != null && !seats.isEmpty()) {
                    for (String seat : seats) {
                        jComboBox3.addItem(seat);
                    }
                    jButton1.setEnabled(true);
                } else {
                    jComboBox3.addItem("No seats available");
                }
    
                price = selectedShowtime.getShownMovie().getMoviePrice();
                jLabel5.setText("Price: $" + String.format("%.2f", price));
    
                break;
            }
        }
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
